# Generated by Django 3.0 on 2024-08-25 03:00

import apps.order.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0059_auto_20240512_1857'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('KCS', 'KCS'), ('WARRANTY', 'WARRANTY')], max_length=10)),
                ('order_code', models.CharField(default=apps.order.models.generate_order_code, max_length=8, unique=True)),
                ('order_status', models.CharField(choices=[('initiated', 'Initiated'), ('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=10)),
                ('delivery_fee', models.IntegerField()),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('guaranteed_delivery_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='OrderPaymentDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.PositiveSmallIntegerField(choices=[(1, 'Wallet'), (2, 'BankTransfer'), (3, 'OnePay')])),
                ('payment_status', models.PositiveSmallIntegerField(choices=[(1, 'Confirmed'), (2, 'Paid'), (3, 'Refunding Deposit'), (4, 'Request refunding'), (5, 'Refunded'), (6, 'Cancelled'), (7, 'Pending'), (8, 'Refunded Deposit'), (9, 'Charged Deposit'), (10, 'Close')])),
                ('amount_paid', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
            ],
            options={
                'db_table': 'order_payment_detail',
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxGTGT', models.DecimalField(decimal_places=2, max_digits=5)),
                ('quantity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
                ('supplier_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='users.SupplierProduct')),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='OrderAddresses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
            ],
            options={
                'db_table': 'order_addresses',
            },
        ),
    ]
