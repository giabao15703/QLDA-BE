# Generated by Django 2.2.5 on 2020-12-04 03:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuctionFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.FloatField()),
                ('max_value', models.FloatField()),
                ('percentage', models.FloatField()),
            ],
            options={
                'db_table': 'sale_schema_auction_fee',
            },
        ),
        migrations.CreateModel(
            name='PlatformFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('fee', models.FloatField()),
            ],
            options={
                'db_table': 'sale_schema_platform_fee',
            },
        ),
        migrations.CreateModel(
            name='ProfileFeaturesBuyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('market_research', models.CharField(max_length=255)),
                ('rfx_year', models.IntegerField(default=1)),
                ('no_eauction_year', models.IntegerField(default=1)),
                ('help_desk', models.CharField(max_length=255)),
                ('report_year', models.IntegerField(default=1)),
                ('sub_user_accounts', models.IntegerField(default=0)),
                ('fee_eauction', models.FloatField(null=True)),
                ('total_fee_year', models.FloatField(null=True)),
                ('profile_features_type', models.PositiveSmallIntegerField(choices=[(1, 'unsecured'), (2, 'flyer'), (3, 'crew'), (4, 'captain')])),
                ('status', models.BooleanField(default=True, null=True)),
            ],
            options={
                'db_table': 'sale_schema_profile_features_buyer',
            },
        ),
        migrations.CreateModel(
            name='ProfileFeaturesSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('free_registration', models.CharField(max_length=255)),
                ('quote_submiting', models.CharField(max_length=255)),
                ('rfxr_receiving_priority', models.FloatField(null=True)),
                ('sub_user_accounts', models.IntegerField()),
                ('help_desk', models.CharField(max_length=255)),
                ('flash_sale', models.IntegerField(default=1)),
                ('report_year', models.IntegerField(default=1)),
                ('base_rate_month', models.FloatField(null=True)),
                ('base_rate_full_year', models.FloatField(null=True)),
                ('profile_features_type', models.PositiveSmallIntegerField(choices=[(1, 'basic'), (2, 'premium'), (3, 'sponsor')])),
                ('status', models.BooleanField(default=True, null=True)),
            ],
            options={
                'db_table': 'sale_schema_profile_features_supplier',
            },
        ),
        migrations.CreateModel(
            name='SICPRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('legal_status', models.FloatField(null=True)),
                ('bank_account', models.FloatField(null=True)),
                ('sanction_check', models.FloatField(null=True)),
                ('certificate_management', models.FloatField(null=True)),
                ('due_diligence', models.FloatField(null=True)),
                ('financial_risk', models.FloatField(null=True)),
                ('total_amount', models.FloatField(null=True)),
                ('sicp_type', models.PositiveSmallIntegerField(choices=[(1, 'unsecured'), (2, 'bronze'), (3, 'silver'), (4, 'gold')])),
                ('status', models.BooleanField(default=True, null=True)),
            ],
            options={
                'db_table': 'sale_schema_sicp_registration',
            },
        ),
    ]
